name: e2e backend pipeline

on:
  schedule:
    - cron: '0 10 * * *' # every day at 10am
  push:


jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.12.2'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Save build folder
        uses: actions/upload-artifact@v4
        with:
          name: build
          if-no-files-found: error
          path: node_modules

  test:
    runs-on: ubuntu-latest
    needs: install
    name: E2E Tests
    strategy:
      matrix:
        browser: ["chrome", "firefox"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download the build folder
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Setup OIDC provider
        run: cd oidc_mock && docker compose up -d

      - name: Wait for OIDC provider
        run: .github/scripts/wait_for_url.sh  http://localhost:4011/.well-known/openid-configuration

      - name: Setup Backend
        run: cd backend_mock && docker compose up -d

      - name: Wait for Backend
        run: .github/scripts/wait_for_url.sh https://localhost:8081/api/actuator/info
 
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: yarn dev
          browser: ${{ matrix.browser }}

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: ./cypress/screenshots


  build:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          bbmrieric/negotiator-frontend
        tags: |
          type=ref,event=branch
          type=raw,value=${{ github.head_ref }},event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        labels: ${{ steps.meta.outputs.labels }}
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=min
